#ifndef SNITCH_CONFIG_HPP
#define SNITCH_CONFIG_HPP

#include <version> // for C++ feature check macros

// These are defined from build-time configuration.
// clang-format off
#define SNITCH_VERSION "${PROJECT_VERSION}"
#define SNITCH_FULL_VERSION "${SNITCH_FULL_VERSION}"
#define SNITCH_VERSION_MAJOR ${PROJECT_VERSION_MAJOR}
#define SNITCH_VERSION_MINOR ${PROJECT_VERSION_MINOR}
#define SNITCH_VERSION_PATCH ${PROJECT_VERSION_PATCH}

#if !defined(SNITCH_MAX_TEST_CASES)
#    define SNITCH_MAX_TEST_CASES ${SNITCH_MAX_TEST_CASES}
#endif
#if !defined(SNITCH_MAX_NESTED_SECTIONS)
#    define SNITCH_MAX_NESTED_SECTIONS ${SNITCH_MAX_NESTED_SECTIONS}
#endif
#if !defined(SNITCH_MAX_EXPR_LENGTH)
#    define SNITCH_MAX_EXPR_LENGTH ${SNITCH_MAX_EXPR_LENGTH}
#endif
#if !defined(SNITCH_MAX_MESSAGE_LENGTH)
#    define SNITCH_MAX_MESSAGE_LENGTH ${SNITCH_MAX_MESSAGE_LENGTH}
#endif
#if !defined(SNITCH_MAX_TEST_NAME_LENGTH)
#    define SNITCH_MAX_TEST_NAME_LENGTH ${SNITCH_MAX_TEST_NAME_LENGTH}
#endif
#if !defined(SNITCH_MAX_TAG_LENGTH)
#    define SNITCH_MAX_TAG_LENGTH ${SNITCH_MAX_TAG_LENGTH}
#endif
#if !defined(SNITCH_MAX_CAPTURES)
#    define SNITCH_MAX_CAPTURES ${SNITCH_MAX_CAPTURES}
#endif
#if !defined(SNITCH_MAX_CAPTURE_LENGTH)
#    define SNITCH_MAX_CAPTURE_LENGTH ${SNITCH_MAX_CAPTURE_LENGTH}
#endif
#if !defined(SNITCH_MAX_UNIQUE_TAGS)
#    define SNITCH_MAX_UNIQUE_TAGS ${SNITCH_MAX_UNIQUE_TAGS}
#endif
#if !defined(SNITCH_MAX_COMMAND_LINE_ARGS)
#    define SNITCH_MAX_COMMAND_LINE_ARGS ${SNITCH_MAX_COMMAND_LINE_ARGS}
#endif
#if !defined(SNITCH_MAX_REGISTERED_REPORTERS)
#    define SNITCH_MAX_REGISTERED_REPORTERS ${SNITCH_MAX_REGISTERED_REPORTERS}
#endif
#if !defined(SNITCH_MAX_PATH_LENGTH)
#    define SNITCH_MAX_PATH_LENGTH ${SNITCH_MAX_PATH_LENGTH}
#endif
#if !defined(SNITCH_MAX_REPORTER_SIZE_BYTES)
#    define SNITCH_MAX_REPORTER_SIZE_BYTES ${SNITCH_MAX_REPORTER_SIZE_BYTES}
#endif
#if !defined(SNITCH_MAX_FILE_OBJECT_SIZE_BYTES)
#    define SNITCH_MAX_FILE_OBJECT_SIZE_BYTES ${SNITCH_MAX_FILE_OBJECT_SIZE_BYTES}
#endif
#if !defined(SNITCH_DEFINE_MAIN)
#cmakedefine01 SNITCH_DEFINE_MAIN
#endif
#if !defined(SNITCH_WITH_STDOUT)
#cmakedefine01 SNITCH_WITH_STDOUT
#endif
#if !defined(SNITCH_WITH_STD_FILE_IO)
#cmakedefine01 SNITCH_WITH_STD_FILE_IO
#endif
#if !defined(SNITCH_WITH_EXCEPTIONS)
#cmakedefine01 SNITCH_WITH_EXCEPTIONS
#endif
#if !defined(SNITCH_WITH_TIMINGS)
#cmakedefine01 SNITCH_WITH_TIMINGS
#endif
#if !defined(SNITCH_WITH_SHORTHAND_MACROS)
#cmakedefine01 SNITCH_WITH_SHORTHAND_MACROS
#endif
#if !defined(SNITCH_DEFAULT_WITH_COLOR)
#cmakedefine01 SNITCH_DEFAULT_WITH_COLOR
#endif
#if !defined(SNITCH_CONSTEXPR_FLOAT_USE_BITCAST)
#cmakedefine01 SNITCH_CONSTEXPR_FLOAT_USE_BITCAST
#endif
#if !defined(SNITCH_APPEND_TO_CHARS)
#cmakedefine01 SNITCH_APPEND_TO_CHARS
#endif
#if !defined(SNITCH_DECOMPOSE_SUCCESSFUL_ASSERTIONS)
#cmakedefine01 SNITCH_DECOMPOSE_SUCCESSFUL_ASSERTIONS
#endif
#if !defined(SNITCH_WITH_ALL_REPORTERS)
#cmakedefine01 SNITCH_WITH_ALL_REPORTERS
#endif
#if !defined(SNITCH_WITH_TEAMCITY_REPORTER)
#cmakedefine01 SNITCH_WITH_TEAMCITY_REPORTER
#endif
#if !defined(SNITCH_WITH_CATCH2_XML_REPORTER)
#cmakedefine01 SNITCH_WITH_CATCH2_XML_REPORTER
#endif
#if !defined(SNITCH_WITH_MULTITHREADING)
#cmakedefine01 SNITCH_WITH_MULTITHREADING
#endif
#if !defined(SNITCH_SHARED_LIBRARY)
#cmakedefine01 SNITCH_SHARED_LIBRARY
#endif
#if !defined(SNITCH_ENABLE)
#cmakedefine01 SNITCH_ENABLE
#endif
// clang-format on

#if defined(_MSC_VER)
#    if defined(_KERNEL_MODE) || (defined(_HAS_EXCEPTIONS) && !_HAS_EXCEPTIONS)
#        define SNITCH_EXCEPTIONS_NOT_AVAILABLE
#    endif
#elif defined(__clang__) || defined(__GNUC__)
#    if !defined(__EXCEPTIONS)
#        define SNITCH_EXCEPTIONS_NOT_AVAILABLE
#    endif
#endif

#if defined(SNITCH_EXCEPTIONS_NOT_AVAILABLE)
#    undef SNITCH_WITH_EXCEPTIONS
#    define SNITCH_WITH_EXCEPTIONS 0
#endif

#if SNITCH_WITH_MULTITHREADING
#    define SNITCH_THREAD_LOCAL thread_local
#else
#    define SNITCH_THREAD_LOCAL
#endif

#if !defined(__cpp_lib_bit_cast)
#    undef SNITCH_CONSTEXPR_FLOAT_USE_BITCAST
#    define SNITCH_CONSTEXPR_FLOAT_USE_BITCAST 0
#endif

#if (!defined(__cpp_lib_to_chars)) || (defined(_GLIBCXX_RELEASE) && _GLIBCXX_RELEASE <= 11) ||     \
    (defined(_LIBCPP_VERSION) && _LIBCPP_VERSION <= 14000) ||                                      \
    (defined(_MSC_VER) && _MSC_VER <= 1924)
#    undef SNITCH_APPEND_TO_CHARS
#    define SNITCH_APPEND_TO_CHARS 0
#endif

#if SNITCH_SHARED_LIBRARY
#    if defined(_MSC_VER)
#        if defined(SNITCH_EXPORTS)
#            define SNITCH_EXPORT __declspec(dllexport)
#        else
#            define SNITCH_EXPORT __declspec(dllimport)
#        endif
#    elif defined(__clang__) || defined(__GNUC__)
#        define SNITCH_EXPORT [[gnu::visibility("default")]]
#    else
#        define SNITCH_EXPORT
#    endif
#else
#    define SNITCH_EXPORT
#endif

#endif
